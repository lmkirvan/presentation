---
format: 
  revealjs:
    theme: [moon, styles.scss]
editor: visual
---

# Sometimes you just need words

:::{.notes}
I'm Lewis Kirvan, I'm a research manager at the Consumer Finance Protection Bureau. today I'm talking about how important words are for data analysts.
:::

## A story with two chapters: {auto-animate="true"}

:::{.incremental style="font-size:1.75em;"}

1. When you need more words.
2. How to make words (a bit) easier!

:::

:::{.notes}
This talk is pretty simple. The first part is about recognizing how important words are for communicating about data. Sure data visualizations are cool, but have you heard of paragraphs? 

The second part of this talk presents a few tactics for making it easy to work with words. Especially when you want to generate text based on your data. 
:::

# Chapter 1: {auto-animate="true"}

[When you need more words]{style="font-size:1.5em;"}

## Possibly the most familiar diagram at this conference

![](img/data-science-explore.png){.absolute top="200" left="200" width="600" height="\"400"}

::: {.notes}
I think everyone has probably seen this diagram from R for data science. It really does explain a lot of what happens when making data products. But I think it leaves off one important thing.
:::

# [You]{style="color:#257675;"} are in the middle of that cycle

## 

![](img/data-science-explore-you.png){.absolute top="100" left="75" width="900" height="\"600"}

:::{.notes}
there you are. looking cool. hands on your hips. So why does this matter? Well, you are building up context for the data and for your analysis during that cycle. 
:::

## Some Stuff you might do along the way:

:::incremental
-   Look at the application that generates the data
-   Read the survey instrument
-   Talk to application users
-   Read data documentation (if you are so lucky)
-   Read relevant research
-   Talk to experts that know about how and why the data was generated
:::

::: {.notes}
this stuff is all data science too. it's important! if you don't really understand the context of your data it's easy to make mistakes. So this stuff is important and shouldn't be undersold.
:::

## 

::: {style="margin-top: 25px; font-size: 3em;"}
Time to [Communicate]{style="color: #257675;"}
:::

::: {.notes}
At some point, or more likely at several points you will do some communication about your data or your analysis! Yay, this part is fun.
:::

##  {background-color="black" background-image="https://www.matillion.com/wp-content/uploads/2015/01/bad-dashboard-examples-1.png" background-repeat="repeat" style="margin-top: 50px; font-size: 4em;"}

::: {.notes}
No knock on dashboards! I've made more than a few. And no knock even on this particular dashboard, it's just what google gave me when I asked for "busy dashboards."  It might be a great dashboard for the someone. But sometimes, reflexively reaching for a dashboard or data visualization driven product can be less than optimal. 
:::

## 

::: {style="margin-top: 25px; font-size: 3em;"}
Time to [communicate]{.fragment .strike style="color: #dc731c;"}
[think about your audience]{.fragment .fade-up style="color:#0050b4;"}
:::

## 

::: {style="margin-top: 25px; font-size: 4em;"}
Bring people along on your [journey]{style="color: #257675;"}
:::

::: {.notes}
Remember all that context you built up? A good first communication question to ask is "how much of that context is shared by my audience". How much do you have to pack, to
get your audience happily to their destination. 
:::


## Two limit cases: Congress | your immediate team {auto-animate="true"}

::: columns
::: {.column width="40%"}
![](img/congress-report.png)
:::

::: {.column width="10%"}
:::

::: {.column width="40%"}
![](img/team-dashboard.png)
:::
:::

::: notes
I'm going to talk about a couple of quick examples that demonstrate the range of packing you might do for your journey.
:::

## Congress {auto-animate="true"}

:::: columns
::: column
![](img/congress-report.png)
:::

::: column
::: incremental
::: {style="font-size:1.75em;"}
-   6 charts
-   2 tables
-   50 pages of context
:::
:::
:::
::::

::: notes
congress needs a lot of stuff
explaining and defining key terms
describing the data collection in detail
describe the legal framework and rules that govern the collection
:::

## Two limit cases: Congress | your immediate team {auto-animate="true"}

:::: columns
::: {.column width="45%"}
![](img/congress-report.png)
:::

::: {.column width="10%"}
:::

::: {.column width="45%"}
![](img/team-dashboard.png)
:::
::::

## your immediate team {auto-animate="true"}

::: columns
::: {.column}
![](img/team-dashboard.png)
:::

::: {.column}
::: incremental
::: {style="font-size:1.75em;"}
-   3 charts
-   6 KPIS
-   less than a paragraph of text
:::
:::
:::
:::

::: notes
-   Labels come directly from data elements
-   Terse chart titles
-   KPIs presented with minimal explanation because everyone understands them.
:::


## [Less shared context]{style="color: #257675;"} means more context (AKA WORDS) needs to be included in your product.

```{r }

library(tidyverse)

this_theme <- function(gg){
   
  gg + 
    theme_void() +
    theme(
      panel.background = element_rect(fill='transparent')
      , plot.background = element_rect(fill='transparent', color=NA)
      , panel.grid.major = element_blank()
      , panel.grid.minor = element_blank()
      , legend.background = element_rect(fill='transparent')
      , legend.box.background = element_rect(fill='transparent')
      )
  
}

circle <- function(gg
                   , size = 100
                   , color = "black"
                   , x = 0 
                   , y = 0){
 
  gg + 
    geom_point(aes(x = x, y = y)
               , size = size
               , color = color
               , alpha = .75) 
   }

ggplot(data = NULL)  %>% 
  circle(color = "#eee8d5", x = -1) %>%  
  circle(color = "light grey", x = 1, y = 0) %>%
  this_theme() +
  xlim(-1.75, 1.75) 

```

## [More shared context]{style="color: #257675;"} means you can include less context in your product (but you still document it!)

```{r}

ggplot(data = NULL)  %>% 
  circle(color = "#eee8d5", x = -0.1) %>%  
  circle(color = "light grey", x = 0.1, y = 0) %>%
  this_theme() +
  xlim(-1.75, 1.75) 

```


## Example : Moving from team communication to external communication 

:::: {.columns}

::: {.column}
![](img/internal-audience.png)
:::

::: {.column}

::: incremental
- interactive tableau dahsboard
- high chart density (dozens!)
- field names correspond to internal system
:::

:::

:::: 

::: notes
PRE: I like this example because it's the same data but presented to two different audiences 
POST: This is a pretty classic team KPIs kind of reporting dashboard. The original draft of the external version of this report repurposed a lot of this dashboard. 
:::

## Example : Moving to an External auidence of bank employees

:::: {.columns}

::: {.column}
![](img/external-audience.png)
:::

::: {.column}
::: incremental
- 3 simple static charts
- Some of the charts from the internal dashboard are now sentences!
- Names are defined in an introduction
- different explanatory paragraphs are included depending on data 
:::
:::

:::: 

::: notes

:::

## key factors

:::{style='font-size:2.25em;'}
[External]{.fragment .highlight-current-blue}  

[Less technical]{.fragment .highlight-current-blue}  

[Decision makers]{.fragment .highlight-current-blue}  

[Time crunched]{.fragment .highlight-current-blue}  

:::

:::{.notes}
external people don't share much context at all
watch out for specialized charts--> don't just present a ROC curve
for decision makers appropriate context builds trust  
time crunched isn't super intuitive--but if someone is time-crunched they won't look up the context themselves. You've got one shot!
:::

# Chapter 2:

[How to make words (a bit) easier!]{style="font-size:1.5em;"}

## 

::: {style="font-size:3em;"}
[RMARKDOWN]{style="color:green;"}
[RMARKDOWN]{style="color:blue;"}
[RMARKDOWN]{style="color:green;"}
[RMARKDOWN]{style="color:blue;"}
:::

##

::: {style="font-size:3em;"}
[QUARTO]{style="color:green;"}
[QUARTO]{style="color:blue;"}
[QUARTO]{style="color:green;"}
[QUARTO]{style="color:blue;"}
[QUARTO]{style="color:green;"}
[QUARTO]{style="color:blue;"}
[QUARTO]{style="color:green;"}
[QUARTO]{style="color:blue;"}
:::


## Tip 1 Use a template language or string interpolation

```{r }
#| code-line-numbers: "|12|13|"
#| echo: fenced

knitr::knit_engines$set(whisker = function(options ){
  
  if(purrr::is_empty(options$data)){
    options$data <- globalenv()
    print(options$data)
  }

  whisker::whisker.render(
    template = options$code
    , data = options$data
    , partials = options$partials
  )
  })

```

## Tip 1A use lists as a 'namespace'

```{r, eval= TRUE, echo=TRUE}

whisker_data <- list(
  species = "virginica"
  , mean_length =  iris %>% 
    filter(Species == "virginica") %>% 
    pull(Petal.Length) %>% 
    mean()
  , overall_mean = mean(iris$Petal.Length)
  , field_name = "petal length"
  , other = iris %>%  
    filter(Species != "virginica") %>% 
    pull(Species) %>% 
    unique() %>% 
    as.character() %>% str_pad(., width = nchar(.) + 1)
)

whisker_data$greater_less <- with(
  whisker_data
  , ifelse(mean_length > overall_mean
           , "longer"
           , "shorter")
  )

```

::: notes
PRE: Why do you want to do this? Because when you're developing a report with lots of generated texts your environment will get very full of stuff. I have some reports that would have dozens of variables needed to generate text. This can put a lot of mental load on you as a developer. Plus naming things is hard...you might calculate ten different means, it's hard to keep differentiating them.  
:::

## Tip 1A use lists as a 'namespace'

```{asis, echo=TRUE}

A typical {{species}} iris has {{greater_less}} {{field_name}} than other iris species ({{other}}).

```

:::{.fragment}
```{whisker, data=whisker_data}

A typical {{species}} iris has {{greater_less}} {{field_name}} than other iris species ({{other}}). 

```
:::

::: {.notes}
Mustache is intentionally very simple, but it does have a couple of other nice features. I use it to create conditional text that depends on some data element passing a threshold or being present in the data. This same pattern works with GLUE and glue. 
:::

# Tip 2 : Use existing design resources

::: notes
design reallly matters for documents with lots of words. style consistency and signposting are one of the big differences between a good document and an unreadable one. There's a good chance that someone in your org has put a lot of thought into how to communicate.  
:::

## Tip 2A Use existing document templates so you never have to copy paste again

it's almost as easy as this: 

::::columns
:::{.column width="45%"}

```yaml
format:
  docx:
    reference-doc: 
      custom-reference-doc.docx
```
:::

:::{.column width="10%"}
:::

:::{.column width="45%"}

```yaml
format:
  docx:
    reference-doc: 
      cool-org-document.docx
```
:::
::::

:::notes
You can actually copy styles between documents! The pand doc starter template is a good place to start, but you can reference styles. The Quarto docs have a good example of how to futz with styles in word. For my org, I've actually wrapped a few of these design templates into packages! Never copy paste again! This same idea can work with existing css that your org uses. It may require a little more finagaling but style consistency can really elevate your documents. 
:::

## Tip 2A Use existing document templates 

Then use pandoc to reference your fancy custom styles like so: 

```markdown
:::{custom-style="pull-quote"}
Put your qutation here!
:::
```

![](img/pull-quote.png)


## Tip 2B Package up your design system

A minimal package that will save you tons of time:

:::incremental
1. put your organization colors in an easy to access list
2. a ggplot theme that gets you most of the way to publication ready
:::

:::notes 
this is cheating, because it's not strictly about using words, but it's such a time saver that I can't not include it.
:::

## Partner with a writer

They can help you with lots of stuff:

:::incremental
- grammar, the grammar for language
- an outside opinion (does it make sense?)
- thinking even more about what your audience cares about. 
:::


